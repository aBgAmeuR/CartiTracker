"use strict";exports.id=938,exports.ids=[938],exports.modules={30938:(e,t,a)=>{a.r(t),a.d(t,{DsdContentParseError:()=>u,DsfParser:()=>I});var s,i=a(43714),n=a(92451),r=a(90387),o=a(23717);let h={len:12,get:(e,t)=>({id:o.e.get(e,t),size:r.UINT64_LE.get(e,t+4)})},d={len:16,get:(e,t)=>({fileSize:r.INT64_LE.get(e,t),metadataPointer:r.INT64_LE.get(e,t+8)})};!function(e){e[e.mono=1]="mono",e[e.stereo=2]="stereo",e[e.channels=3]="channels",e[e.quad=4]="quad",e[e["4 channels"]=5]="4 channels",e[e["5 channels"]=6]="5 channels",e[e["5.1 channels"]=7]="5.1 channels"}(s||(s={}));let l={len:40,get:(e,t)=>({formatVersion:r.INT32_LE.get(e,t),formatID:r.INT32_LE.get(e,t+4),channelType:r.INT32_LE.get(e,t+8),channelNum:r.INT32_LE.get(e,t+12),samplingFrequency:r.INT32_LE.get(e,t+16),bitsPerSample:r.INT32_LE.get(e,t+20),sampleCount:r.INT64_LE.get(e,t+24),blockSizePerChannel:r.INT32_LE.get(e,t+32)})};var m=a(18197),p=a(31274);let c=i("music-metadata:parser:DSF");class u extends(0,p.fO)("DSD"){}class I extends n.k{async postId3v2Parse(){let e=this.tokenizer.position,t=await this.tokenizer.readToken(h);if("DSD "!==t.id)throw new u("Invalid chunk signature");this.metadata.setFormat("container","DSF"),this.metadata.setFormat("lossless",!0);let a=await this.tokenizer.readToken(d);if(a.metadataPointer!==BigInt(0))return c(`expect ID3v2 at offset=${a.metadataPointer}`),await this.parseChunks(a.fileSize-t.size),await this.tokenizer.ignore(Number(a.metadataPointer)-this.tokenizer.position-e),new m.S().parse(this.metadata,this.tokenizer,this.options);c("No ID3v2 tag present")}async parseChunks(e){for(;e>=h.len;){let t=await this.tokenizer.readToken(h);if(c(`Parsing chunk name=${t.id} size=${t.size}`),"fmt "===t.id){let e=await this.tokenizer.readToken(l);this.metadata.setFormat("numberOfChannels",e.channelNum),this.metadata.setFormat("sampleRate",e.samplingFrequency),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("numberOfSamples",e.sampleCount),this.metadata.setFormat("duration",Number(e.sampleCount)/e.samplingFrequency);let t=e.bitsPerSample*e.samplingFrequency*e.channelNum;this.metadata.setFormat("bitrate",t);return}this.tokenizer.ignore(Number(t.size)-h.len),e-=t.size}}}},92451:(e,t,a)=>{a.d(t,{k:()=>l});var s=a(44552),i=a(43714),n=a(55317),r=a(18197),o=a(85885),h=a(75350);let d=i("music-metadata:parser:ID3");class l extends h.s{constructor(){super(...arguments),this.id3parser=new r.S}static async startsWithID3v2Header(e){return"ID3"===(await e.peekToken(n.yW)).fileIdentifier}async parse(){try{await this.parseID3v2()}catch(e){if(e instanceof s.d1)d("End-of-stream");else throw e}}finalize(){}async parseID3v2(){if(await this.tryReadId3v2Headers(),d("End of ID3v2 header, go to MPEG-parser: pos=%s",this.tokenizer.position),await this.postId3v2Parse(),this.options.skipPostHeaders&&this.metadata.hasAny())this.finalize();else{let e=new o.Bn(this.metadata,this.tokenizer,this.options);await e.parse(),this.finalize()}}async tryReadId3v2Headers(){if("ID3"===(await this.tokenizer.peekToken(n.yW)).fileIdentifier)return d("Found ID3v2 header, pos=%s",this.tokenizer.position),await this.id3parser.parse(this.metadata,this.tokenizer,this.options),this.tryReadId3v2Headers()}}}};